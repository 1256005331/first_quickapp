<import name="Lately" src="./lately"></import>
<template>
    <div class="body">
        <div class="lately_title">
            <text style="color:#FFE8D5">如果您未完成防沉迷信息请</text><text @click="setuserinfo" style="color:#ff1234;margin-left:20px;">完善信息</text>
        </div>
        <div class="header">
            <image class="header_img" src="http://member.8090.com/images/nv.png"></image>
            <div class="header_name">
                <text class="nickname">您好:{{username}}</text>
                <div>
                    <a class="out" @click="outlogin">退出登录</a>
                </div>
            </div>
        </div>
        <Lately></Lately>
        <div class="lately_title">
            <text>热门推荐</text>
        </div>
        <refresh class="refresh-div" onrefresh="refresh" refreshing="{{isRefreshing}}" offset="200px"></refresh>
        <div class="hot">
            <list class="page-list" id="list_data" onscrolltop="scrolltop">
                <list-item type="list-item" for="value in listData">
                    <div class="item-content-div" >
                        <div class="image">
                            <image class="item-image" src="{{value.ico}}" ></image>
                        </div>
                        <div class="text-list">
                            <text class="gname">{{value.gamename}}</text>
                            <text class="text-list">开服时间：{{value.open_time}}</text>
                            <text class="text-list">服务器名：{{value.gserver}}</text>
                        </div>
                        <div>
                            <a class="button" @click="goToWeb(value.enter)">开始</a>
                        </div>
                    </div>
                </list-item>
            </list>
        </div>
        <div class="menu">
            <text style="color:#ffffff" @click="gotocenter">游戏中心</text>
            <text style="color:#FF4D4D">个人中心</text>
        </div>
    </div>
</template>

<style>
.body           {flex-direction:column;}
.header         {width:750px;height:160px;padding:10px;}
.header_img     {width:140px;height:140px;}
.header_name    {flex:1;flex-direction:row;margin-top:50px;padding-left:30px;}
.out            {height:60px;margin-left:10px;font-size:30px;border-radius:20px;padding:10px;background-color:#FF8364;color:#FFE8D5}
.nickname       {font-size:30px;width:60%;}
.lately,.hot    {justify-content: center;flex-direction: column;width:750px;}
.lately_title,.hot_title {width:100%;padding-left:20px;background-color:#FF8364;color:#FFE8D5;padding-top:10px;padding-bottom:10px;}
.lately_title text,.hot_title text{color:#FFE8D5;}
.lately_content {width:100%;flex-direction: column;padding:20px;}
.content_image  {width:100px;height:100px;}
.hot_content    {flex-direction:column;}
.hot_list       {width:750px;}
.list-item      {width:100%;}
.hot_image      {width:120px;padding:10px;}
.text_list      {flex-direction:column;}
.button         {font-size:35px;}
.gname          {font-size:30px;color:#FF4D4D}
.image          {flex-direction:column;width:120px;padding:10px;border-radius:10px}
.text-list      {flex-direction:column;width:450px;margin-left:20px;color:#FF8364}
.content        {width:750px;height:100%}
.button         {height:60px;width:80px;margin-top:30px;font-size:30px;border-radius:20px;padding:10px;background-color:#FF8364;color:#FFE8D5}
.refresh-div    {flex-direction:column;flex:1;width:750px;progress-color:#ff1234}
.page-list      {width:750px;height:100%;flex-direction:column}
.item-content-div{width:100%;margin-left:20px;margin-right:20px;margin-top:20px;background-color:#ffffff;border-radius:10px}
.item-image     {width:100px;height:100px;background-color:rgba(0,0,0,.03);border-radius:10px}
.item-image-small{width:680px;height:340px;resize-mode:contain;background-color:rgba(0,0,0,.03)}
.item-title     {width:100%;font-size:30px;color:#666666;margin-bottom:15px}
.item-date      {width:100%;height:30px;font-size:24px;color:#999999;margin-top:15px}
.bottom-div     {width:750px;height:120px;justify-content:center;align-items:center}
.bottom-progress{height:120px;stroke-width:32px;color:#ff1234}
.bottom-text    {margin-left:10px;height:120px;text-align:center;font-size:30px}
.showgototop    {position:fixed;width:80px;height:80px;right:30px;bottom:60px;animation-name:showgototop;animation-duration:.8s;animation-fill-mode:forwards;animation-timing-function:ease-in}
.bottom_style   {width:100%;padding-top:30px;padding-bottom:30px;justify-content:center;align-items:center}
.menu           {width:750px;height:100px;background-color:#000000;opacity:0.7;align-items: center;text-align: center;position:fixed;bottom:0px;}
.menu text      {width:50%;flex-direction: column;text-align: center;}
</style>



<script>
import prompt from '@system.prompt'
import router from '@system.router'
import storage from '@system.storage'
import fetch from '@system.fetch'
import webview from '@system.webview'
export default {
  data() {
    return {
        username:'',
        latelyData:[],
        listData:[]
    }
  },
    onInit() {
        this.$forceUpdate()
        this.userinfo()
        this.getlistData()
    },
    onReady (){

    },
    gotocenter(){
    router.clear()
    router.push({
        uri: '/Home'
    })
        return false
    },
    userinfo(){
        let that = this
        storage.get({
            key:'username',
            success: function (data) {
                if(data == ''){
                    router.push({
                        uri: '/Login'
                    })
                    return false
                }else{
                    that.username = data
                    //获取最近登录数据
                    fetch && fetch.fetch({
                        url: "http://data.8090.com/api/get_h5_info.php?username="+data,
                        success: function(data) {
                                var temlatelyData = []
                                try {
                                    temlatelyData = JSON.parse(data.data)
                                } catch (error) {
                                    console.log("JSON.parse(data.data).results catch error")
                                }
                                that.latelyData = temlatelyData;
                        },
                        fail: function(data, code) {
                            console.log("fetch fail, code=" + code);
                        }
                    })
                    return false
                }
            },
            fail: function (data, code) {
                router.push({
                    uri: '/Login'
                })
            }
        })
    },
    goToWeb(urlString) {
        let time = Date.parse(new Date());
        storage.get({
            key: 'time',
            success: function (data) {
                if(data < time || data == ''){
                    router.push({
                        uri: '/Login',
                        params: {
                            goback: urlString,
                            page_type:1
                        }
                    })
                }
            },
            fail: function (data, code) {
                router.push({
                    uri: '/Login'
                })
            }
        })
        storage.get({
            key: 'username',
            success: function (data) {
                if(data == ''){
                    router.push({
                        uri: '/Login',
                        params: {
                            goback: urlString,
                            page_type:1
                        }
                    })
                }else{
                    webview.loadUrl({
                        url: urlString + data
                    })
                }
            },
            fail: function (data, code) {
                router.push({
                    uri: '/Login'
                })
            }
        })
    },
    getlistData(){
        var self = this
        fetch && fetch.fetch({
            url: "http://h.8090.com/kyy_kfb/admin/index.php/Kyy/datalist?type=day&category=1",
            success: function(data) {
                if(data.data != null){
                    var tempData = []
                    try {
                        tempData = JSON.parse(data.data)
                    } catch (error) {
                        console.log("JSON.parse(data.data).results catch error")
                    }
                        self.listData = tempData;
                        self.isRefreshing = false
                }else{
                    self.isRefreshing = false
                }
            },
            fail: function(data, code) {
                console.log("fetch fail, code=" + code);
                self.loadingText = "很抱歉，加载失败"
                self.isRefreshing = false
            }
        })
    },
    outlogin(){
        storage.clear({
            success: function (data) {
                prompt.showToast({message: '退出成功'})
                router.clear()
                router.push({
                    uri: '/Login'
                })
            },
            fail: function (data, code) {
                prompt.showToast({message: '退出失败'})
            }
        })
    },
    onMenuPress() {
        this.$app.showMenu();
    },
    setuserinfo(){
        router.clear()
        router.push({
            uri: '/Cardid'
        })
    }
}
</script>